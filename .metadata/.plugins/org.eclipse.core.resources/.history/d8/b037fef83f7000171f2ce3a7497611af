/*
 * selection_sort.c
 *
 *  Created on: Dec 22, 2016
 *      Author: inventor
 */

/*
 *
 * */
#include <stdio.h>
#include <stdbool.h>

#define ARRAYSIZE 9

int array[ARRAYSIZE] = {14,33,27,10,35,19,42,45,0};

void printSortedArray(int arr[]);
void swap(int *a_ptr, int *b_ptr);
void selection_sort(int a[]);
int* getMin(int a[], int *arr_ptr_1, int *arr_ptr_2, int size);

int main()
{
	printSortedArray(array);
	selection_sort(array);
	printSortedArray(array);
	return 0;
	}

void printSortedArray(int arr[])
{
	int i = 0;
	printf("[");
	for(i = 0; i < ARRAYSIZE; i++)
	{
		printf(" %d ", arr[i]);
	}
	printf("]\n");
	}

void swap(int *a_ptr, int *b_ptr)
{
	int c = *a_ptr;
	*a_ptr = *b_ptr;
	*b_ptr = c;
	}

//void selection_sort(int a[])
//{
//	int i = 0, j = 0, ind_min = 0;
//	for(i = 0; i < ARRAYSIZE; i++)
//	{
//		ind_min = i;
//		for(j = i+1; j<ARRAYSIZE; j++)
//		{
//			if(a[j] < a[ind_min])
//			{
//				ind_min = j;
//			}
//		}
//		printf("%d\n", a[ind_min]);
//		if(ind_min != i)
//		{
//			swap(&a[i], &a[ind_min]);
//		}
//	}
//	}

void selection_sort(int a[])
{
	int i = 0, m = 0, n = m + 1;
	int *arr_ptr_1 = a, *arr_ptr_2 = &a[n];
	for(i = 0; i < ARRAYSIZE; i++)
	{
		if( arr_ptr_2-a < ARRAYSIZE)
		{
			int* min = getMin(a, arr_ptr_1, arr_ptr_2, ARRAYSIZE);
			swap(&a[i], &a[min-a]);
			m++;
			n++;
			arr_ptr_1 = &a[m];
			arr_ptr_2 = &a[n];
		}
	}
	}

int* getMin(int a[], int *arr_ptr_1, int *arr_ptr_2, int size)
{
	int* val;
	//int *arr_ptr_1 = a, *arr_ptr_2 = &a[1];
	while (arr_ptr_2 - a < size)
	{
		if (*arr_ptr_1 < *arr_ptr_2)
		{
			val = arr_ptr_1;
			arr_ptr_2++;
		}
		else
		{
			val = arr_ptr_2;
			arr_ptr_1 = arr_ptr_2;
			arr_ptr_2++;
		}
	}
	return val;
	}
