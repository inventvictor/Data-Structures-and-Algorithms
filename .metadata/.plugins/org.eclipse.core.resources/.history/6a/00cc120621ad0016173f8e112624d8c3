/*
 * arrayStack.c
 *
 *  Created on: Nov 18, 2016
 *      Author: inventor
 */


#include <stdio.h>
#include <stdbool.h>
#include "arrayStack.h"

//int array[MAXSIZE];
//int *array_ptr = &array[MAXSIZE-1];
//int pointer_counter = MAXSIZE;
//
//int main()
//{
//	int i = 0;
//	stack_push(3);
//	stack_push(4);
//	stack_push(9585);
//	stack_push(200);
//	//stack_push(45);
//	//stack_push(34);
//	//stack_push(384);
//	//stack_push(3435);
//	for(i = 0; i < MAXSIZE; i++)
//	{
//		printf("%d\n", array[i]);
//	}
////	printf("isFull-");
////	printf("%d\n", stack_isFull());
////	printf("%d\n", stack_peek());
//	printf("Popped data - ");
//	printf("%d\n", stack_pop());
//	printf("Stack size - ");
//	printf("%d\n", stack_size());
//	stack_push(45895);
//	stack_push(48936);
//	for(i = 0; i < MAXSIZE; i++)
//	{
//		printf("%d\n", array[i]);
//	}
//	printf("Stack size - ");
//	printf("%d\n", stack_size());
//	return 0;
//	}

bool stack_isEmpty(int ptr_counter)
{
	bool b = false;
	if(ptr_counter == MAXSIZE)
	{
		b = true;
	}
	return b;
	}

bool stack_isFull(int ptr_counter)
{
	bool b = false;
	if(ptr_counter == 0)
	{
		b = true;
	}
	return b;
	}

int stack_peek(int *arr_ptr)
{
	int data = 0;
	if(!stack_isEmpty())
	{
		arr_ptr++;
		data = *arr_ptr;
		arr_ptr--;
	}
	return data;
	}

bool stack_push(int data, int *arr_ptr, int ptr_counter)
{
	bool b = false;
	if(!stack_isFull())
	{
		*arr_ptr = data;
		arr_ptr--;
		ptr_counter--;
		b = true;
	}
	return b;
	}

int stack_pop(int *arr_ptr, int ptr_counter)
{
	int data = 0;
	arr_ptr++;
	ptr_counter++;
	data = *arr_ptr;
	*arr_ptr = 0;
	return data;
	}

int stack_size(int ptr_counter)
{
	return MAXSIZE - ptr_counter;
	}
